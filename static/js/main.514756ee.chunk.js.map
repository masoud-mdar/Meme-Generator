{"version":3,"sources":["Header.js","Generator.js","Footer.js","App.js","index.js"],"names":["Header","className","Generator","props","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","allMemes","state","allMemesArr","randomImg","Math","floor","random","length","url","handleClick","topSelected","newObj","Object","assign","topTextPosition","top","left","bottomTextPosition","bottom","handleSelector","newColor","color","background","textColor","handleCapture","domtoimage","toPng","document","getElementById","quality","then","dataUrl","link","createElement","download","href","click","topText","bottomText","fetch","response","json","data","memes","onSubmit","this","type","placeholder","onChange","onClick","style","id","src","alt","Component","Footer","App","React","ReactDOM","render"],"mappings":"0NAceA,EAZA,WACX,OACI,qBAAKC,UAAU,cAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,qB,uBC4KhBC,E,kDAhLX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAwBVC,aAAe,SAACC,GAAW,IAAD,EACDA,EAAMC,OAApBC,EADe,EACfA,KAAKC,EADU,EACVA,MACZ,EAAKC,SAAL,eACKF,EAAMC,KA5BG,EAgClBE,aAAe,SAACL,GACZA,EAAMM,iBACN,IAAMC,EAAW,EAAKC,MAAMC,YAEtBC,EAAYH,EADAI,KAAKC,MAAMD,KAAKE,SAASN,EAASO,SACdC,IACtC,EAAKX,SAAS,CACVM,UAAWA,KAtCD,EA0ClBM,YAAc,SAAChB,GAAW,IACfE,EAAQF,EAAMC,OAAdC,KAEP,GADiB,EAAKM,MAAMS,YACf,CACT,IAAMC,EAASC,OAAOC,OAAO,GAAG,EAAKZ,MAAMa,iBAC3C,OAAQnB,GACJ,IAAK,MACDgB,EAAOhB,IAAQ,EACf,MACJ,IAAK,SACDgB,EAAOI,KAAM,EACb,MACJ,IAAK,OACDJ,EAAOhB,IAAQ,EACf,MACJ,IAAK,QACDgB,EAAOK,MAAO,EAItB,EAAKnB,SAAS,CACViB,gBAAgBH,QAElB,CACF,IAAMA,EAASC,OAAOC,OAAO,GAAG,EAAKZ,MAAMgB,oBAC3C,OAAQtB,GACJ,IAAK,SACDgB,EAAOhB,IAAQ,EACf,MACJ,IAAK,MACDgB,EAAOO,QAAS,EAChB,MACJ,IAAK,OACDP,EAAOhB,IAAQ,EACf,MACJ,IAAK,QACDgB,EAAOK,MAAO,EAGtB,EAAKnB,SAAS,CACVoB,mBAAmBN,MAlFb,EAuFlBQ,eAAiB,SAAC1B,GAEd,GAAa,mBADEA,EAAMC,OAAdC,KACuB,CAC1B,EAAKE,UAAS,SAAAI,GAAK,MAAI,CACnBS,aAAcT,EAAMS,gBAExB,IAAMU,EAAY,EAAKnB,MAAMS,YAAc,6BAA8B,aACzE,EAAKb,SAAS,CACVwB,MAAM,CACFC,WAAWF,SAIgB,UAA/B,EAAKnB,MAAMsB,UAAUF,MACrB,EAAKxB,SAAS,CACV0B,UAAU,CACNF,MAAM,WAId,EAAKxB,SAAS,CACV0B,UAAU,CACNF,MAAM,YA7GR,EAqHlBG,cAAgB,WACZC,IAAWC,MAAMC,SAASC,eAAe,OAAQ,CAAEC,QAAS,MAC3DC,MAAK,SAAUC,GACZ,IAAIC,EAAOL,SAASM,cAAc,KAClCD,EAAKE,SAAW,eAChBF,EAAKG,KAAOJ,EACZC,EAAKI,YAzHT,EAAKnC,MAAQ,CACToC,QAAQ,GACRC,WAAW,GACXnC,UAAU,iCACVD,YAAY,GACZY,gBAAgB,CACZC,IAAI,EACJC,KAAK,KAETC,mBAAmB,CACfC,OAAO,EACPF,KAAK,KAETN,aAAY,EACZW,MAAM,CACFC,WAAW,cAEfC,UAAU,CACNF,MAAM,UApBA,E,qDAgIlB,WAAoB,IAAD,OACfkB,MAAM,qCACDT,MAAK,SAAAU,GAAQ,OAAIA,EAASC,UAC1BX,MAAK,SAAAU,GAAQ,OAAI,EAAK3C,SAAS,CAC5BK,YAAasC,EAASE,KAAKC,a,oBAMvC,WAEI,OACI,gCACI,uBAAMtD,UAAU,OAAOuD,SAAUC,KAAK/C,aAAtC,UACI,uBAAOgD,KAAK,OAAOnD,KAAK,UAAUoD,YAAY,WAAWnD,MAAOiD,KAAK5C,MAAMoC,QAASW,SAAUH,KAAKrD,eACnG,uBAAOsD,KAAK,OAAOnD,KAAK,aAAaoD,YAAY,cAAcnD,MAAOiD,KAAK5C,MAAMqC,WAAYU,SAAUH,KAAKrD,eAC5G,iDAEJ,uBACA,sBAAKH,UAAU,mBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,wBAAQM,KAAK,iBAAiBsD,QAASJ,KAAK1B,eAAgB+B,MAAOL,KAAK5C,MAAMoB,MAA9E,wBACA,wBAAQ1B,KAAK,gBAAgBsD,QAASJ,KAAK1B,eAA3C,yBACA,wBAAQgC,GAAG,UAAUF,QAASJ,KAAKrB,cAAnC,yBAEJ,sBAAKnC,UAAU,mBAAf,UACI,wBAAQM,KAAK,SAASsD,QAASJ,KAAKpC,YAApC,iBACA,wBAAQd,KAAK,MAAMsD,QAASJ,KAAKpC,YAAjC,oBACA,wBAAQd,KAAK,QAAQsD,QAASJ,KAAKpC,YAAnC,kBACA,wBAAQd,KAAK,OAAOsD,QAASJ,KAAKpC,YAAlC,yBAGR,uBACA,sBAAKpB,UAAU,eAAe8D,GAAG,MAAjC,UACI,qBAAK9D,UAAU,UAAU6D,MAAOL,KAAK5C,MAAMa,gBAA3C,SACA,oBAAIoC,MAAOL,KAAK5C,MAAMsB,UAAtB,SAAkCsB,KAAK5C,MAAMoC,YAE7C,qBAAKe,IAAKP,KAAK5C,MAAME,UAAWkD,IAAI,eACpC,qBAAKhE,UAAU,aAAa6D,MAAOL,KAAK5C,MAAMgB,mBAA9C,SACA,oBAAIiC,MAAOL,KAAK5C,MAAMsB,UAAtB,SAAkCsB,KAAK5C,MAAMqC,yB,GAzKzCgB,aCeTC,EAhBA,WACX,OACI,8BACI,qBAAKlE,UAAU,eAAf,SAEI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,uBCYpBmE,E,kDAhBX,WAAYjE,GAAO,uCACTA,G,0CAGV,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAVEkE,IAAMH,WCExBI,IAASC,OACP,cAAC,EAAD,IACAhC,SAASC,eAAe,W","file":"static/js/main.514756ee.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className=\"nav-wrapper\">\r\n            <div className=\"leaf-wrapper\">\r\n                <div className=\"leaf one\"></div>\r\n                <div className=\"leaf two\"></div>\r\n                <div className=\"leaf three\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport domtoimage from 'dom-to-image';\r\n\r\nclass Generator extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            topText:\"\",\r\n            bottomText:\"\",\r\n            randomImg:\"https://i.imgflip.com/8p0a.jpg\",\r\n            allMemesArr:[],\r\n            topTextPosition:{\r\n                top:0,\r\n                left:550,\r\n            },\r\n            bottomTextPosition:{\r\n                bottom:0,\r\n                left:550,\r\n            },\r\n            topSelected:true,\r\n            color:{\r\n                background:\"whitesmoke\"\r\n            },\r\n            textColor:{\r\n                color:\"beige\"\r\n            }\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {name,value} = event.target;\r\n        this.setState({\r\n            [name]:value,\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const allMemes = this.state.allMemesArr;\r\n        const randomNum = Math.floor(Math.random()*allMemes.length);\r\n        const randomImg = allMemes[randomNum].url;\r\n        this.setState({\r\n            randomImg: randomImg,\r\n        })\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        const {name} = event.target;\r\n        const selector = this.state.topSelected;\r\n        if (selector){\r\n            const newObj = Object.assign({},this.state.topTextPosition);\r\n            switch (name){\r\n                case \"top\":\r\n                    newObj[name] +=5;\r\n                    break\r\n                case \"bottom\":\r\n                    newObj.top -=5;\r\n                    break;\r\n                case \"left\":\r\n                    newObj[name] +=5;\r\n                    break;\r\n                case \"right\":\r\n                    newObj.left -=5;\r\n                    break;\r\n            }\r\n            \r\n            this.setState({\r\n                topTextPosition:newObj,\r\n            })\r\n        } else{\r\n            const newObj = Object.assign({},this.state.bottomTextPosition);\r\n            switch (name){\r\n                case \"bottom\":\r\n                    newObj[name] +=5;\r\n                    break\r\n                case \"top\":\r\n                    newObj.bottom -=5;\r\n                    break;\r\n                case \"left\":\r\n                    newObj[name] +=5;\r\n                    break;\r\n                case \"right\":\r\n                    newObj.left -=5;\r\n                    break;\r\n            }\r\n            this.setState({\r\n                bottomTextPosition:newObj,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSelector = (event) => {\r\n        const {name} = event.target;\r\n        if (name === \"selectorButton\"){\r\n            this.setState(state =>({\r\n                topSelected: !state.topSelected,\r\n            }))\r\n            const newColor = (this.state.topSelected)? \"rgba(218, 214, 214, 0.479)\": \"whitesmoke\";\r\n            this.setState({\r\n                color:{\r\n                    background:newColor,\r\n                }\r\n            })\r\n        } else{\r\n            if (this.state.textColor.color === \"beige\"){\r\n                this.setState({\r\n                    textColor:{\r\n                        color:\"black\",\r\n                    }\r\n                })\r\n            } else{\r\n                this.setState({\r\n                    textColor:{\r\n                        color:\"beige\",\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n    handleCapture = () => {\r\n        domtoimage.toPng(document.getElementById('box'), { quality: 0.95 })\r\n        .then(function (dataUrl) {\r\n            var link = document.createElement('a');\r\n            link.download = 'my-meme.jpeg';\r\n            link.href = dataUrl;\r\n            link.click();\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => this.setState({\r\n                allMemesArr: response.data.memes,\r\n            }))\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" name=\"topText\" placeholder=\"Top Text\" value={this.state.topText} onChange={this.handleChange} />\r\n                    <input type=\"text\" name=\"bottomText\" placeholder=\"Bottom Text\" value={this.state.bottomText} onChange={this.handleChange} />\r\n                    <button>Generate</button>\r\n                </form>\r\n                <br />\r\n                <div className=\"position-wrapper\">\r\n                    <div className=\"selector\">\r\n                        <button name=\"selectorButton\" onClick={this.handleSelector} style={this.state.color}>Top/Bottom</button>\r\n                        <button name=\"colorSelector\" onClick={this.handleSelector}>Dark/Bright</button>\r\n                        <button id=\"btnSave\" onClick={this.handleCapture}>Download</button>\r\n                    </div>\r\n                    <div className=\"position-changer\">\r\n                        <button name=\"bottom\" onClick={this.handleClick}>Top</button>\r\n                        <button name=\"top\" onClick={this.handleClick}>Bottom</button>    \r\n                        <button name=\"right\" onClick={this.handleClick}>Left</button>\r\n                        <button name=\"left\" onClick={this.handleClick}>Right</button>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"meme-wrapper\" id=\"box\">\r\n                    <div className=\"topText\" style={this.state.topTextPosition}>\r\n                    <h2 style={this.state.textColor}>{this.state.topText}</h2>\r\n                    </div>\r\n                    <img src={this.state.randomImg} alt=\"Meme image\"/>\r\n                    <div className=\"bottomText\" style={this.state.bottomTextPosition}>\r\n                    <h2 style={this.state.textColor}>{this.state.bottomText}</h2>\r\n                    </div>\r\n                </div>\r\n            </div>          \r\n        )\r\n    }\r\n}\r\n\r\nexport default Generator;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"foot-wrapper\">\r\n\r\n                <div className=\"leaf-wrapper\">\r\n                    <div className=\"leaf one\"></div>\r\n                    <div className=\"leaf two\"></div>\r\n                    <div className=\"leaf three\"></div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Generator from \"./Generator\";\r\nimport Footer from \"./Footer\";\r\n\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header />\r\n                <Generator />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './style.css';\nimport App from \"./App\"\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}